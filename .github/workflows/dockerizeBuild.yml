name: Docker Build & AWS Deploy

on:
  push:
    branches:
      - devOps

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: ./client
          push: true
          tags: avinashrajure/portfolio:latest # Use a fixed tag for simplicity

  deploy-to-aws:
    runs-on: ubuntu-latest
    needs: build-and-push # This job only starts after the image is built and pushed
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.0

      - name: Initialize and Apply Terraform
        env:
          # AWS credentials needed for Terraform
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          cd terraform
          terraform init
          terraform apply -auto-approve
          echo "HOST=$(terraform output -raw portfolio_ec2_public_ip)" >> $GITHUB_ENV

      - name: Deploy Docker to EC2 via SSH
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ env.HOST }} # The IP address found by Terraform
          username: ec2-user
          key: ${{ secrets.EC2_KEY }} # Private key to access the server
          script: |
            docker pull avinashrajure/portfolio:latest
            docker stop portfolio || true
            docker rm portfolio || true
            docker run -d -p 80:3000 --name portfolio avinashrajure/portfolio:latest
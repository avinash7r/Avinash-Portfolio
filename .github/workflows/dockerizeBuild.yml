name: Docker Build & AWS Deploy

on:
  push:
    branches:
      - devOps

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: ./client
          push: true
          tags: avinashrajure/portfolio:latest

  deploy-to-aws:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.0

      - name: Initialize and Apply Terraform
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          cd terraform
          terraform init
          terraform apply -auto-approve

      - name: Get EC2 Instance ID
        id: get_instance_id
        run: |
          INSTANCE_ID=$(terraform output -raw portfolio_ec2_instance_id | tr -d '"\r\n')
          echo "INSTANCE_ID=$INSTANCE_ID" >> $GITHUB_ENV




      - name: Deploy Docker via SSM
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
          INSTANCE_ID: ${{ env.INSTANCE_ID }}
        run: |
          aws ssm send-command \
            --targets "Key=instanceIds,Values=$INSTANCE_ID" \
            --document-name "AWS-RunShellScript" \
            --comment "Deploy portfolio Docker image" \
            --parameters 'commands=[
              "docker pull avinashrajure/portfolio:latest",
              "docker stop portfolio || true",
              "docker rm portfolio || true",
              "docker run -d -p 80:3000 --name portfolio avinashrajure/portfolio:latest"
            ]' \
            --region $AWS_REGION
